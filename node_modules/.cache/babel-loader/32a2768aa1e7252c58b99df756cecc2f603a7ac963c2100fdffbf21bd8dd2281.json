{"ast":null,"code":"import axios from 'axios';\nimport TaskForm from '@/components/TaskForm.vue';\nexport default {\n  name: 'CombinedView',\n  components: {\n    TaskForm\n  },\n  data() {\n    return {\n      localTasks: [],\n      apiTasks: [],\n      loading: false,\n      error: '',\n      filter: 'all',\n      source: 'all',\n      searchTerm: ''\n    };\n  },\n  computed: {\n    allTasks() {\n      return [...this.localTasks, ...this.apiTasks];\n    },\n    completedTasks() {\n      return this.allTasks.filter(task => task.completed);\n    },\n    pendingTasks() {\n      return this.allTasks.filter(task => !task.completed);\n    },\n    progressPercentage() {\n      if (this.allTasks.length === 0) return 0;\n      return Math.round(this.completedTasks.length / this.allTasks.length * 100);\n    },\n    filteredTasks() {\n      return this.allTasks.filter(task => {\n        // Filtro por estado\n        if (this.filter === 'pending' && task.completed) return false;\n        if (this.filter === 'completed' && !task.completed) return false;\n\n        // Filtro por fuente\n        if (this.source === 'local' && !task.isLocal) return false;\n        if (this.source === 'api' && task.isLocal) return false;\n\n        // Filtro por búsqueda\n        const searchText = (task.title || task.todo || '').toLowerCase();\n        if (this.searchTerm && !searchText.includes(this.searchTerm.toLowerCase())) {\n          return false;\n        }\n        return true;\n      });\n    }\n  },\n  created() {\n    this.fetchApiTasks();\n  },\n  methods: {\n    async fetchApiTasks() {\n      this.loading = true;\n      try {\n        const response = await axios.get('https://dummyjson.com/todos');\n        this.apiTasks = response.data.todos.map(task => ({\n          ...task,\n          isLocal: false\n        }));\n      } catch (err) {\n        this.error = 'Error al cargar las tareas de la API.';\n        console.error('Error:', err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    addTask(task) {\n      const newTask = {\n        ...task,\n        id: Date.now(),\n        isLocal: true\n      };\n      this.localTasks.unshift(newTask);\n    },\n    toggleTask(task) {\n      task.completed = !task.completed;\n    },\n    deleteTask(task) {\n      if (task.isLocal) {\n        this.localTasks = this.localTasks.filter(t => t.id !== task.id);\n      } else {\n        this.apiTasks = this.apiTasks.filter(t => t.id !== task.id);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","TaskForm","name","components","data","localTasks","apiTasks","loading","error","filter","source","searchTerm","computed","allTasks","completedTasks","task","completed","pendingTasks","progressPercentage","length","Math","round","filteredTasks","isLocal","searchText","title","todo","toLowerCase","includes","created","fetchApiTasks","methods","response","get","todos","map","err","console","addTask","newTask","id","Date","now","unshift","toggleTask","deleteTask","t"],"sources":["src/views/CombinedView.vue"],"sourcesContent":["<template>\r\n    <div class=\"container py-4\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-lg-10\">\r\n          <h2 class=\"text-center mb-4\">Vista Combinada de Tareas</h2>\r\n          \r\n          <!-- TaskForm Component -->\r\n          <TaskForm @task-added=\"addTask\" />\r\n  \r\n          <!-- Estado de carga y error -->\r\n          <div v-if=\"loading\" class=\"text-center my-4\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Cargando...</span>\r\n            </div>\r\n          </div>\r\n  \r\n          <div v-if=\"error\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n            {{ error }}\r\n            <button type=\"button\" class=\"btn-close\" @click=\"error = ''\" aria-label=\"Close\"></button>\r\n          </div>\r\n  \r\n          <!-- Filtros -->\r\n          <div class=\"card mb-4\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row align-items-center\">\r\n                <div class=\"col-md-4\">\r\n                  <select v-model=\"filter\" class=\"form-select\">\r\n                    <option value=\"all\">Todas las tareas</option>\r\n                    <option value=\"pending\">Pendientes</option>\r\n                    <option value=\"completed\">Completadas</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <select v-model=\"source\" class=\"form-select\">\r\n                    <option value=\"all\">Todas las fuentes</option>\r\n                    <option value=\"local\">Tareas locales</option>\r\n                    <option value=\"api\">Tareas de API</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <div class=\"input-group\">\r\n                    <input \r\n                      type=\"text\" \r\n                      class=\"form-control\" \r\n                      v-model=\"searchTerm\"\r\n                      placeholder=\"Buscar tareas...\"\r\n                    >\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"bi bi-search\"></i>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Lista de tareas -->\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <div v-if=\"filteredTasks.length === 0\" class=\"text-center py-4\">\r\n                <i class=\"bi bi-inbox fs-1 text-muted\"></i>\r\n                <p class=\"text-muted mt-2\">No se encontraron tareas que coincidan con los filtros.</p>\r\n              </div>\r\n              \r\n              <div v-else class=\"list-group\">\r\n                <div \r\n                  v-for=\"task in filteredTasks\" \r\n                  :key=\"task.id\"\r\n                  class=\"list-group-item list-group-item-action\"\r\n                  :class=\"{'bg-light': task.completed}\"\r\n                >\r\n                  <div class=\"d-flex justify-content-between align-items-center\">\r\n                    <div class=\"form-check\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        class=\"form-check-input\"\r\n                        :checked=\"task.completed\"\r\n                        @change=\"toggleTask(task)\"\r\n                      >\r\n                      <label \r\n                        class=\"form-check-label ms-2\"\r\n                        :class=\"{'text-decoration-line-through': task.completed}\"\r\n                      >\r\n                        {{ task.title || task.todo }}\r\n                      </label>\r\n                    </div>\r\n                    <div class=\"d-flex align-items-center gap-2\">\r\n                      <span \r\n                        class=\"badge\"\r\n                        :class=\"task.isLocal ? 'bg-success' : 'bg-info'\"\r\n                      >\r\n                        {{ task.isLocal ? 'Local' : 'API' }}\r\n                      </span>\r\n                      <span \r\n                        class=\"badge\"\r\n                        :class=\"task.completed ? 'bg-success' : 'bg-warning'\"\r\n                      >\r\n                        {{ task.completed ? 'Completada' : 'Pendiente' }}\r\n                      </span>\r\n                      <button \r\n                        class=\"btn btn-outline-danger btn-sm\"\r\n                        @click=\"deleteTask(task)\"\r\n                      >\r\n                        <i class=\"bi bi-trash\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <!-- Estadísticas -->\r\n          <div class=\"card mt-4\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">Estadísticas</h5>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"text-center\">\r\n                    <h6>Total de tareas</h6>\r\n                    <p class=\"h4\">{{ allTasks.length }}</p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"text-center\">\r\n                    <h6>Completadas</h6>\r\n                    <p class=\"h4 text-success\">{{ completedTasks.length }}</p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"text-center\">\r\n                    <h6>Pendientes</h6>\r\n                    <p class=\"h4 text-warning\">{{ pendingTasks.length }}</p>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                  <div class=\"text-center\">\r\n                    <h6>Progreso</h6>\r\n                    <div class=\"progress\">\r\n                      <div \r\n                        class=\"progress-bar bg-success\" \r\n                        :style=\"{width: progressPercentage + '%'}\"\r\n                      >\r\n                        {{ progressPercentage }}%\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import TaskForm from '@/components/TaskForm.vue';\r\n  \r\n  export default {\r\n    name: 'CombinedView',\r\n    components: {\r\n      TaskForm\r\n    },\r\n    data() {\r\n      return {\r\n        localTasks: [],\r\n        apiTasks: [],\r\n        loading: false,\r\n        error: '',\r\n        filter: 'all',\r\n        source: 'all',\r\n        searchTerm: ''\r\n      };\r\n    },\r\n    computed: {\r\n      allTasks() {\r\n        return [...this.localTasks, ...this.apiTasks];\r\n      },\r\n      completedTasks() {\r\n        return this.allTasks.filter(task => task.completed);\r\n      },\r\n      pendingTasks() {\r\n        return this.allTasks.filter(task => !task.completed);\r\n      },\r\n      progressPercentage() {\r\n        if (this.allTasks.length === 0) return 0;\r\n        return Math.round((this.completedTasks.length / this.allTasks.length) * 100);\r\n      },\r\n      filteredTasks() {\r\n        return this.allTasks.filter(task => {\r\n          // Filtro por estado\r\n          if (this.filter === 'pending' && task.completed) return false;\r\n          if (this.filter === 'completed' && !task.completed) return false;\r\n  \r\n          // Filtro por fuente\r\n          if (this.source === 'local' && !task.isLocal) return false;\r\n          if (this.source === 'api' && task.isLocal) return false;\r\n  \r\n          // Filtro por búsqueda\r\n          const searchText = (task.title || task.todo || '').toLowerCase();\r\n          if (this.searchTerm && !searchText.includes(this.searchTerm.toLowerCase())) {\r\n            return false;\r\n          }\r\n  \r\n          return true;\r\n        });\r\n      }\r\n    },\r\n    created() {\r\n      this.fetchApiTasks();\r\n    },\r\n    methods: {\r\n      async fetchApiTasks() {\r\n        this.loading = true;\r\n        try {\r\n          const response = await axios.get('https://dummyjson.com/todos');\r\n          this.apiTasks = response.data.todos.map(task => ({\r\n            ...task,\r\n            isLocal: false\r\n          }));\r\n        } catch (err) {\r\n          this.error = 'Error al cargar las tareas de la API.';\r\n          console.error('Error:', err);\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n      addTask(task) {\r\n        const newTask = {\r\n          ...task,\r\n          id: Date.now(),\r\n          isLocal: true\r\n        };\r\n        this.localTasks.unshift(newTask);\r\n      },\r\n      toggleTask(task) {\r\n        task.completed = !task.completed;\r\n      },\r\n      deleteTask(task) {\r\n        if (task.isLocal) {\r\n          this.localTasks = this.localTasks.filter(t => t.id !== task.id);\r\n        } else {\r\n          this.apiTasks = this.apiTasks.filter(t => t.id !== task.id);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .list-group-item {\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .list-group-item:hover {\r\n    transform: translateX(5px);\r\n  }\r\n  \r\n  .progress {\r\n    height: 20px;\r\n  }\r\n  \r\n  .form-check-label {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .badge {\r\n    transition: all 0.2s ease;\r\n  }\r\n  </style>"],"mappings":"AA6JA,OAAAA,KAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,UAAA;MACAC,QAAA;MACAC,OAAA;MACAC,KAAA;MACAC,MAAA;MACAC,MAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,gBAAAR,UAAA,UAAAC,QAAA;IACA;IACAQ,eAAA;MACA,YAAAD,QAAA,CAAAJ,MAAA,CAAAM,IAAA,IAAAA,IAAA,CAAAC,SAAA;IACA;IACAC,aAAA;MACA,YAAAJ,QAAA,CAAAJ,MAAA,CAAAM,IAAA,KAAAA,IAAA,CAAAC,SAAA;IACA;IACAE,mBAAA;MACA,SAAAL,QAAA,CAAAM,MAAA;MACA,OAAAC,IAAA,CAAAC,KAAA,MAAAP,cAAA,CAAAK,MAAA,QAAAN,QAAA,CAAAM,MAAA;IACA;IACAG,cAAA;MACA,YAAAT,QAAA,CAAAJ,MAAA,CAAAM,IAAA;QACA;QACA,SAAAN,MAAA,kBAAAM,IAAA,CAAAC,SAAA;QACA,SAAAP,MAAA,qBAAAM,IAAA,CAAAC,SAAA;;QAEA;QACA,SAAAN,MAAA,iBAAAK,IAAA,CAAAQ,OAAA;QACA,SAAAb,MAAA,cAAAK,IAAA,CAAAQ,OAAA;;QAEA;QACA,MAAAC,UAAA,IAAAT,IAAA,CAAAU,KAAA,IAAAV,IAAA,CAAAW,IAAA,QAAAC,WAAA;QACA,SAAAhB,UAAA,KAAAa,UAAA,CAAAI,QAAA,MAAAjB,UAAA,CAAAgB,WAAA;UACA;QACA;QAEA;MACA;IACA;EACA;EACAE,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA,MAAAD,cAAA;MACA,KAAAvB,OAAA;MACA;QACA,MAAAyB,QAAA,SAAAhC,KAAA,CAAAiC,GAAA;QACA,KAAA3B,QAAA,GAAA0B,QAAA,CAAA5B,IAAA,CAAA8B,KAAA,CAAAC,GAAA,CAAApB,IAAA;UACA,GAAAA,IAAA;UACAQ,OAAA;QACA;MACA,SAAAa,GAAA;QACA,KAAA5B,KAAA;QACA6B,OAAA,CAAA7B,KAAA,WAAA4B,GAAA;MACA;QACA,KAAA7B,OAAA;MACA;IACA;IACA+B,QAAAvB,IAAA;MACA,MAAAwB,OAAA;QACA,GAAAxB,IAAA;QACAyB,EAAA,EAAAC,IAAA,CAAAC,GAAA;QACAnB,OAAA;MACA;MACA,KAAAlB,UAAA,CAAAsC,OAAA,CAAAJ,OAAA;IACA;IACAK,WAAA7B,IAAA;MACAA,IAAA,CAAAC,SAAA,IAAAD,IAAA,CAAAC,SAAA;IACA;IACA6B,WAAA9B,IAAA;MACA,IAAAA,IAAA,CAAAQ,OAAA;QACA,KAAAlB,UAAA,QAAAA,UAAA,CAAAI,MAAA,CAAAqC,CAAA,IAAAA,CAAA,CAAAN,EAAA,KAAAzB,IAAA,CAAAyB,EAAA;MACA;QACA,KAAAlC,QAAA,QAAAA,QAAA,CAAAG,MAAA,CAAAqC,CAAA,IAAAA,CAAA,CAAAN,EAAA,KAAAzB,IAAA,CAAAyB,EAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}