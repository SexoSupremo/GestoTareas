{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"TaskList\",\n  data() {\n    return {\n      tasks: [],\n      newTask: \"\",\n      loading: false,\n      error: \"\"\n    };\n  },\n  created() {\n    this.fetchTasks();\n  },\n  methods: {\n    async fetchTasks() {\n      this.loading = true;\n      try {\n        const response = await axios.get('https://dummyjson.com/todos');\n        const apiTasks = response.data.todos.map(task => ({\n          ...task,\n          isLocal: false\n        }));\n        this.tasks = apiTasks;\n        this.error = \"\";\n      } catch (err) {\n        this.error = \"Error al cargar las tareas\";\n        console.error('Error:', err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    addTask() {\n      if (!this.newTask.trim()) return;\n      const task = {\n        id: Date.now(),\n        todo: this.newTask,\n        completed: false,\n        isLocal: true\n      };\n      this.tasks.unshift(task);\n      this.newTask = \"\";\n    },\n    toggleTask(task) {\n      task.completed = !task.completed;\n    },\n    deleteTask(task) {\n      const index = this.tasks.findIndex(t => t.id === task.id);\n      if (index > -1) {\n        this.tasks.splice(index, 1);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","tasks","newTask","loading","error","created","fetchTasks","methods","response","get","apiTasks","todos","map","task","isLocal","err","console","addTask","trim","id","Date","now","todo","completed","unshift","toggleTask","deleteTask","index","findIndex","t","splice"],"sources":["src/views/TaskList.vue"],"sourcesContent":["<template>\r\n    <div class=\"container my-4\">\r\n        <h2 class=\"text-center mb-4\">Gestor de Tareas Combinado</h2>\r\n        \r\n        <div class=\"card mb-4\">\r\n            <div class=\"card-body\">\r\n                <!-- Formulario para agregar tareas -->\r\n                <form @submit.prevent=\"addTask\" class=\"mb-4\">\r\n                    <div class=\"input-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            class=\"form-control\"\r\n                            v-model=\"newTask\"\r\n                            placeholder=\"Nueva tarea...\"\r\n                        />\r\n                        <button type=\"submit\" class=\"btn btn-primary\">\r\n                            <i class=\"bi bi-plus-circle me-2\"></i>\r\n                            AÃ±adir\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n                <!-- Mensaje de error -->\r\n                <div v-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\r\n                    {{ error }}\r\n                </div>\r\n\r\n                <!-- Indicador de carga -->\r\n                <div v-if=\"loading\" class=\"text-center\">\r\n                    <div class=\"spinner-border text-primary\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Cargando...</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Lista de tareas -->\r\n                <div v-else class=\"list-group\">\r\n                    <div \r\n                        v-for=\"task in tasks\" \r\n                        :key=\"task.id\" \r\n                        class=\"list-group-item list-group-item-action\"\r\n                    >\r\n                        <div class=\"d-flex justify-content-between align-items-center\">\r\n                            <div class=\"form-check\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    class=\"form-check-input\"\r\n                                    :checked=\"task.completed\"\r\n                                    @change=\"toggleTask(task)\"\r\n                                />\r\n                                <label\r\n                                    class=\"form-check-label\"\r\n                                    :class=\"{'text-decoration-line-through': task.completed}\"\r\n                                >\r\n                                    {{ task.todo || task.title }}\r\n                                </label>\r\n                            </div>\r\n                            <div>\r\n                                <span \r\n                                    class=\"badge me-2\"\r\n                                    :class=\"task.isLocal ? 'bg-success' : 'bg-info'\"\r\n                                >\r\n                                    {{ task.isLocal ? 'Local' : 'API' }}\r\n                                </span>\r\n                                <button\r\n                                    class=\"btn btn-danger btn-sm\"\r\n                                    @click=\"deleteTask(task)\"\r\n                                >\r\n                                    <i class=\"bi bi-trash\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: \"TaskList\",\r\n    data() {\r\n        return {\r\n            tasks: [],\r\n            newTask: \"\",\r\n            loading: false,\r\n            error: \"\"\r\n        };\r\n    },\r\n    created() {\r\n        this.fetchTasks();\r\n    },\r\n    methods: {\r\n        async fetchTasks() {\r\n            this.loading = true;\r\n            try {\r\n                const response = await axios.get('https://dummyjson.com/todos');\r\n                const apiTasks = response.data.todos.map(task => ({\r\n                    ...task,\r\n                    isLocal: false\r\n                }));\r\n                this.tasks = apiTasks;\r\n                this.error = \"\";\r\n            } catch (err) {\r\n                this.error = \"Error al cargar las tareas\";\r\n                console.error('Error:', err);\r\n            } finally {\r\n                this.loading = false;\r\n            }\r\n        },\r\n\r\n        addTask() {\r\n            if (!this.newTask.trim()) return;\r\n            \r\n            const task = {\r\n                id: Date.now(),\r\n                todo: this.newTask,\r\n                completed: false,\r\n                isLocal: true\r\n            };\r\n            \r\n            this.tasks.unshift(task);\r\n            this.newTask = \"\";\r\n        },\r\n\r\n        toggleTask(task) {\r\n            task.completed = !task.completed;\r\n        },\r\n\r\n        deleteTask(task) {\r\n            const index = this.tasks.findIndex(t => t.id === task.id);\r\n            if (index > -1) {\r\n                this.tasks.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.input-group {\r\n    margin-bottom: 1rem;\r\n}\r\n\r\n.list-group-item {\r\n    transition: background-color 0.2s ease;\r\n}\r\n\r\n.list-group-item:hover {\r\n    background-color: #f8f9fa;\r\n}\r\n\r\n.form-check-label {\r\n    cursor: pointer;\r\n}\r\n\r\n.btn-sm {\r\n    padding: 0.25rem 0.5rem;\r\n}\r\n</style>"],"mappings":"AA+EA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,OAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA,MAAAD,WAAA;MACA,KAAAH,OAAA;MACA;QACA,MAAAK,QAAA,SAAAV,KAAA,CAAAW,GAAA;QACA,MAAAC,QAAA,GAAAF,QAAA,CAAAR,IAAA,CAAAW,KAAA,CAAAC,GAAA,CAAAC,IAAA;UACA,GAAAA,IAAA;UACAC,OAAA;QACA;QACA,KAAAb,KAAA,GAAAS,QAAA;QACA,KAAAN,KAAA;MACA,SAAAW,GAAA;QACA,KAAAX,KAAA;QACAY,OAAA,CAAAZ,KAAA,WAAAW,GAAA;MACA;QACA,KAAAZ,OAAA;MACA;IACA;IAEAc,QAAA;MACA,UAAAf,OAAA,CAAAgB,IAAA;MAEA,MAAAL,IAAA;QACAM,EAAA,EAAAC,IAAA,CAAAC,GAAA;QACAC,IAAA,OAAApB,OAAA;QACAqB,SAAA;QACAT,OAAA;MACA;MAEA,KAAAb,KAAA,CAAAuB,OAAA,CAAAX,IAAA;MACA,KAAAX,OAAA;IACA;IAEAuB,WAAAZ,IAAA;MACAA,IAAA,CAAAU,SAAA,IAAAV,IAAA,CAAAU,SAAA;IACA;IAEAG,WAAAb,IAAA;MACA,MAAAc,KAAA,QAAA1B,KAAA,CAAA2B,SAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAV,EAAA,KAAAN,IAAA,CAAAM,EAAA;MACA,IAAAQ,KAAA;QACA,KAAA1B,KAAA,CAAA6B,MAAA,CAAAH,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}